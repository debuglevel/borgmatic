name: MSYS2 CI
on: [push, pull_request]

jobs:
  msys2-ucrt64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true

      # borgmatic
      - name: Install borgmatic dependencies
        run: bash ./scripts/msys2-install-deps ucrt
      - name: Show borgmatic version
        run: borgmatic --version
      - name: mkdir /tmp/borg
        run: mkdir /tmp/borg
      - name: Generate borgmatic config
        # NOTE: without --destination, the command succeeds, but somehow there is no /etc/borgmatic/config.yaml
        run: borgmatic config generate --destination /tmp/borg/borgmatic.yaml
      # - name: ls -alR /etc
      #   run: ls -alR /etc
      - name: ls -alR /tmp/borg
        run: ls -alR /tmp/borg
      - name: Show borgmatic config
        # run: cat /etc/borgmatic/config.yaml
        run: cat /tmp/borg/borgmatic.yaml
      - name: Validate borgmatic config
        run: borgmatic config validate --config /tmp/borg/borgmatic.yaml

      # borg
      - name: Install borg
        run: SETUPTOOLS_USE_DISTUTILS=stdlib pip install borgbackup
      - name: Show borg version
        run: borg --version

      # test borgmatic
      - name: edit config 1
        run: sed -i '/backupserver/d' /tmp/borg/borgmatic.yaml
      - name: edit config 2
        run: sed -i '/sourcehostname.borg/d' /tmp/borg/borgmatic.yaml
      - name: Show borgmatic config after edit
        # run: cat /etc/borgmatic/config.yaml
        run: cat /tmp/borg/borgmatic.yaml
      - name: mkdir -p /mnt/backup
        run: mkdir -p /mnt/backup
      - name: ls -alR /mnt/
        run: ls -alR /mnt/
      - name: borgmatic init
        run: borgmatic init --config /tmp/borg/borgmatic.yaml --encryption repokey
      - name: borgmatic create
        run: borgmatic create --config /tmp/borg/borgmatic.yaml
      - name: borgmatic info
        run: borgmatic info --config /tmp/borg/borgmatic.yaml
      - name: borgmatic rinfo
        run: borgmatic rinfo --config /tmp/borg/borgmatic.yaml
      - name: borgmatic list
        run: borgmatic list --config /tmp/borg/borgmatic.yaml
      - name: borgmatic rlist
        run: borgmatic rlist --config /tmp/borg/borgmatic.yaml

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # borgmatic
      - name: Install borgmatic dependencies
        run: bash ./scripts/msys2-install-deps ucrt
      - name: Show borgmatic version
        run: borgmatic --version
      - name: mkdir /tmp/borg
        run: mkdir /tmp/borg
      - name: Generate borgmatic config
        # NOTE: without --destination, the command succeeds, but somehow there is no /etc/borgmatic/config.yaml
        run: borgmatic config generate --destination /tmp/borg/borgmatic.yaml
      # - name: ls -alR /etc
      #   run: ls -alR /etc
      - name: ls -alR /tmp/borg
        run: ls -alR /tmp/borg
      - name: Show borgmatic config
        # run: cat /etc/borgmatic/config.yaml
        run: cat /tmp/borg/borgmatic.yaml
      - name: Validate borgmatic config
        run: borgmatic config validate --config /tmp/borg/borgmatic.yaml

      # borg
      - name: Install borg
        run: pip install borgbackup
      - name: Show borg version
        run: borg --version

      # test borgmatic
      - name: edit config 1
        run: sed -i '/backupserver/d' /tmp/borg/borgmatic.yaml
      - name: edit config 2
        run: sed -i '/sourcehostname.borg/d' /tmp/borg/borgmatic.yaml
      - name: Show borgmatic config after edit
        # run: cat /etc/borgmatic/config.yaml
        run: cat /tmp/borg/borgmatic.yaml
      - name: mkdir -p /mnt/backup
        run: mkdir -p /mnt/backup
      - name: ls -alR /mnt/
        run: ls -alR /mnt/
      - name: borgmatic init
        run: borgmatic init --config /tmp/borg/borgmatic.yaml --encryption repokey
      - name: borgmatic create
        run: borgmatic create --config /tmp/borg/borgmatic.yaml
      - name: borgmatic info
        run: borgmatic info --config /tmp/borg/borgmatic.yaml
      - name: borgmatic rinfo
        run: borgmatic rinfo --config /tmp/borg/borgmatic.yaml
      - name: borgmatic list
        run: borgmatic list --config /tmp/borg/borgmatic.yaml
      - name: borgmatic rlist
        run: borgmatic rlist --config /tmp/borg/borgmatic.yaml



  linuxborg:

    # strategy:
    #   fail-fast: true
    #   matrix:
    #     include:
    #         - os: ubuntu-22.04
    #           python-version: '3.9'
    #           toxenv: mypy
    #         - os: ubuntu-22.04
    #           python-version: '3.11'
    #           toxenv: docs
    #         - os: ubuntu-22.04
    #           python-version: '3.9'
    #           toxenv: py39-fuse2
    #         - os: ubuntu-22.04
    #           python-version: '3.10'
    #           toxenv: py310-fuse3
    #         - os: ubuntu-22.04
    #           python-version: '3.11'
    #           toxenv: py311-fuse3
    #         - os: ubuntu-22.04
    #           python-version: '3.12'
    #           toxenv: py312-fuse3

    # env:
    #   TOXENV: ${{ matrix.toxenv }}

    runs-on: ubuntu-22.04
    timeout-minutes: 60

    steps:
    - uses: actions/checkout@v3
      with:
        # just fetching 1 commit is not enough for setuptools-scm, so we fetch all
        fetch-depth: 0
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Linux packages
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config build-essential
        sudo apt-get install -y libssl-dev libacl1-dev libxxhash-dev liblz4-dev libzstd-dev
        sudo apt-get install -y libfuse-dev fuse || true  # Required for Python llfuse module
        sudo apt-get install -y libfuse3-dev fuse3 || true  # Required for Python pyfuse3 module

    - name: Install Python requirements
      run: |
        python -m pip install --upgrade pip setuptools wheel
        #pip install -r requirements.d/development.txt
    - name: Install borgbackup
      run: |
        pip install borgbackup==1.2.6
        #python setup.py -v develop
    - name: Show borg version
      run: borg --version

  # msys2-clang64:
  #   runs-on: windows-latest
  #   defaults:
  #     run:
  #       shell: msys2 {0}
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - uses: msys2/setup-msys2@v2
  #       with:
  #         msystem: CLANG64
  #         update: true
  #     - name: Install dependencies
  #       run: ./scripts/msys2-install-deps clang
  #     - name: Show version
  #       run: borgmatic --version
  #     - name: Generate config
  #       run: generate-borgmatic-config
  #     - name: Validate config
  #       run: validate-borgmatic-config
